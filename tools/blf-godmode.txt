# import game engine modules
from bge import render
from bge import logic
# import stand alone modules
import bgl
import blf

scene = logic.getCurrentScene()

def init():
    """init function - runs once"""
    # create a new font object, use external ttf file
    font_path = logic.expandPath('//BlackChancery.ttf')
    # store the font indice - to use later
    logic.font_id = blf.load(font_path)

    # set the font drawing routine to run every frame
    scene = logic.getCurrentScene()
    scene.post_draw = [write]


def write():
    txt = scene.objects["Text"]
    #txt.color = [1,1,0, 0.5]
    camera = scene.active_camera
    orth = camera.ortho_scale
    s = txt.localScale.x
    h = camera.worldPosition.z
    near = camera.near
    far = camera.far
    
    """write on screen"""
    width = render.getWindowWidth()
    height = render.getWindowHeight()

    # OpenGL setup
    bgl.glMatrixMode(bgl.GL_PROJECTION)
    bgl.glLoadIdentity()
    bgl.gluOrtho2D(0, width, 0, height)
    bgl.glMatrixMode(bgl.GL_MODELVIEW)
    bgl.glLoadIdentity()

    # BLF drawing routine
    font_id = logic.font_id
    unit = width/orth
    pos = [-3.3, 0.74, 10]

    #GL = 0.8
    #unit = 0.005
    #+ = 0.8025
    
    #Z-Deep on orthographic:
    #Values in range beetween (-1 and 1), where -1 is far, and 1 near and 0 is (far-near)/2
    oh = (far-near)/2
    ortho_unit = 1/oh
    dh = oh - h
    
    blf.position(font_id, width/2+pos[0]*unit, height/2+pos[1]*unit, dh*ortho_unit + pos[2]*ortho_unit)
    m = camera.projection_matrix * txt.worldPosition
    #blf.position(font_id, camera.projection_matrix * txt.)
    blf.size(font_id, int(s*unit), 72)
    blf.draw(font_id, "Hello World")